#!/usr/bin/env perl
# Created: 09 Jan 2019
# Author: Thomas Hackl, thackl@lim4.de
use warnings;
use strict;
use Getopt::Long  qw(:config no_ignore_case bundling);
use Data::Dumper;

GetOptions (
    "out|o=s" => sub { '-' ne $_[1] and open(STDOUT, '>', $_[1]) || die $! },
    "help|h!" => \(my $help),
    "debug|D!" => \(my $debug),
) or die("Error in command line arguments\n");

if ($help){
    print "Usage: hmmtbl2tsv.pl < in > out\n";
    printf " %-19s  %s\n", "-o/--out", "write to this file [STDOUT]";
    printf " %-19s  %s\n", "-h/--help", "show this help";
    printf " %-19s  %s\n", "-D/--debug", "show debug messages";
    exit 0;
}

my $argv = "";
my $n_col;

while (<>) {
    if ($ARGV ne $argv) { # new file
        $argv = $ARGV;
        my $head = <>;
        my $sep = <>;
        $head =~ s/^# +//;
        $head =~ s/ name/_name/g;
        $head =~ s/ of target/_of_target/g;
        my @head = split(/ +/, $head);
        $n_col = @head; # tbl and domtbl have different number of cols
        
        print STDERR "processing $argv as ", $n_col == 19 ? "tbl" : "domtbl",   " w/ $n_col columns\n";
        print join("\t", @head),"\n";
        next;
    }
    next if /^#/; # comments at end of file
    # use fixed number of cols to allow spaces in description (last col)
    print join("\t", split(/ +/, $_, $n_col));
}
